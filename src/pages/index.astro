---
import Layout from '../layouts/Layout.astro';
import Spotify from '../components/Spotify.astro';
import Project from '../components/Project.astro';
import SecondaryProject from '../components/SecondaryProject.astro';
import ChatBot from '../components/ChatBot.jsx';
import Blog from '../components/Blog.astro';
import '../styles/hover.css';

const mainProjects = [
  {
    title: "Gandalf",
    languages: "React, Node, Yjs",
    description: "Realtime multiplayer AI hand-tracking whiteboard.",
    url: "https://gandalf.design",
    github: "https://github.com/ronthekiehn/gandalf",
    image: "/images/gandalf.svg"
  },
  {
    title: "cmd+e",
    languages: "React, Cloudflare Workers, Gemini API",
    description: "Natural language event creation for gcal. ",
    url: "https://chromewebstore.google.com/detail/cmd-+-e-ai-event-creation/ccgokmpngmiglfceeleekbjhfeioplap?authuser=0&hl=en",
    github: "https://github.com/ronthekiehn/cmd-e",
    image: "/images/cmde.svg"
  },
  {
    title: "Leetle",
    languages: "Svelte, Go, Docker, DigitalOcean",
    description: "LeetCode meets Wordle - daily coding challenges. 1,000+ weekly active players.",
    url: "https://leetle.app",
    image: "/images/leetle.svg"
  },
  {
    title: "twitter-aura2",
    languages: "Svelte, Node, Vercel, MongoDB",
    description: "The viral twitter color palette analyzer. Over 500,000 profiles analyzed.",
    github: "https://github.com/ronthekiehn/twitter-aura2",
    url: "https://twitter-aura2.vercel.app",
    image: "/images/aura2.svg"
  },
  {
    title: "gptriver",
    languages: "HTML, CSS, JS, Flask, GPT-2",
    description: "a flowing river of text generated by gpt-2. a testament to how far we've come.",
    url: "https://ronthekiehn.github.io/gpt-river/",
    github: "https://github.com/ronthekiehn/gpt-river",
    image: "/images/gptriver.svg"
  },
  {
    title: "DAWand Blender",
    languages: "Python, PyTorch, Blender API",
    description: "Add-on that runs 3DL's DAWand in Blender. Awaiting approval.",
    url: "https://extensions.blender.org/approval-queue/da-wand/",
    github: "https://github.com/threedle/DAWand-Blender",
    image: "/images/wand2.svg"
  },
  {
    title: "cube dot c",
    languages: "C, JavaScript, WASM",
    description: "The ASCII spinning cube is now in your browser with the power of WASM.",
    github: "https://github.com/ronthekiehn/cube-web",
    url: "https://ronthekiehn.github.io/cube-web/",
    image: "/images/cube.png"
  },
  {
    title: "Review Consensus",
    languages: "JavaScript, Gemini API, Vercel",
    description: "Chrome extension that writes an AI-generated review consensus on Goodreads.",
    github: "https://github.com/ronthekiehn/Goodreads",
    url: "https://chromewebstore.google.com/detail/review-consensus-for-good/klpimcobgdoeidognoplffkaajjialid?authuser=0&hl=en",
    image: "/images/goodreads.svg"
  }
];

const otherProjects = [
  {
    title: "UChicago Course Feedback",
    description: "Chrome extension that shows course feedback on UChicago's course catalog.",
    languages: "HTML, CSS, JavaScript",
    github: "https://github.com/bheim/courseFeedback",
    url: "https://chromewebstore.google.com/detail/fhmmbigjknknbmejcjbnkjjpfkbkndim?utm_source=item-share-cp"
  },
  {
    title: "Sky Alerts (WIP)",
    description: "An app that sends alerts for astronomical events. Releasing later this year.",
    languages: "React Native, Expo, Firebase, GCP"
  },
  {
    title: "Billion-Visualizer",
    description: "A more concrete visualizer for @bddicken's language comparison project",
    languages: "Python, Matplotlib",
    github: "https://github.com/ronthekiehn/billion-visualizer"
  },
  {
    title: "Nootunez (WIP)",
    description: "Generate unique Spotify recommendations. Awaiting API extension for release.",
    languages: "HTML/CSS/JS, Node.js, Spotify API, Heroku, Vercel, Firebase",
    github: "https://github.com/ronthekiehn/BetterSpotifyRecs"
  },
  {
    title: "Daily Aurelius",
    description: "Chrome extension that shows a new quote from Meditations every day.",
    languages: "JavaScript, Python",
    github: "https://github.com/ronthekiehn/Daily-Aurelius",
    url: "https://chromewebstore.google.com/detail/daily-aurelius/pnmaadcfpnogifckbhhbmfflkbjoekji"
  },
  {
    title: "Sexy Screen (WIP)",
    description: "An open source alternative to screen recording tools like ScreenStudio.",
    languages: "Python"
  },
  {
    title: "Haskell-Cube (WIP)",
    description: "Recreating my Cube project in Haskell. Hoping to make a web version.",
    languages: "Haskell, Javascript"
  },
  {
    title: "Cube",
    description: "Takes a simple ASCII cube and adds a ton of features.",
    languages: "C, Python",
    github: "https://github.com/ronthekiehn/Cube"
  },
  {
    title: "Dune2Risk",
    description: "Uncommon Hacks 2024 Best Game Winner. It's like Risk but Dune, made in Pygame.",
    languages: "Python, PyGame",
    github: "https://github.com/ethaneig/dune2risk",
    url: "https://uncommon-hacks-2024.devpost.com/project-gallery"
  },
  {
    title: "PopPriceGuide Scraper",
    description: "A small web scraper for PopPriceGuide to find the price of a Funko Pop.",
    languages: "Python, Selenium, BeautifulSoup, re",
    github: "https://github.com/ronthekiehn/FunkoPop-Scraper"
  }
];
---

<Layout title="ron kiehn dot dev">
	<div class="max-w-5xl w-full p-3 sm:p-8">
		<div class="flex flex-col justify-center">
			<div class="flex justify-between mb-4 motion-preset-fade-sm">
				<h1 class="typewriter text-3xl md:text-4xl lg:text-5xl mr-2 md:mr-0">ron kiehn dot dev</h1>
				<Spotify />
			</div>
      <div class="grid grid-cols-5 text-base sm:text-lg lg:px-2">
        <div class="col-span-5 sm:col-span-3 space-y-2 md:space-y-4 ">
          <div class="motion-preset-slide-right-sm flex flex-col">
            <span class="font-bold">about me</span>
            <span>cs & philosophy @ <span class="text-red-400">uchicago</span>.</span>
            <span>i do frontend, fullstack, and machine learning.</span>
            <span>in june, i'll be joining <span class="text-purple-400">Î»</span>.</span>
            <!-- <a href="buymeacoffee.com/ronthekiehn" target="_blank" rel="noreferrer" class="hover:underline  text-yellow-200">buy me a coffee</a> -->
          </div>
          <div class="motion-preset-slide-right-sm my-2 relative divider h-[2px] w-full bg-zinc-600">
            <div class="absolute inset-0 bg-gradient-radial z-10"></div>
          </div>

          <div class="flex flex-col motion-preset-slide-right-sm motion-delay-75">
            <span class="font-bold">contact me</span>
            <span class="pointer-events-none"><span class="pointer-events-auto select-text">ronki@uchicago.edu</span></span>
            <span>or find me on 
              <a href="https://github.com/ronthekiehn" target="_blank" rel="noreferrer" class="text-yellow-200 hover:underline">github</a>,
              <a href="https://www.linkedin.com/in/ronkiehn/" target="_blank" rel="noreferrer" class="text-blue-500 hover:underline">linkedin</a>,
              and 
              <a href="https://x.com/reallyrawn" target="_blank" rel="noreferrer" class="text-blue-200 hover:underline">twitter</a>.
            </span>
          </div>

          <div class="my-2 relative divider h-[2px] w-full bg-zinc-600 motion-preset-slide-right-sm motion-delay-75">
            <div class="absolute inset-0 bg-gradient-radial z-10"></div>
          </div>

          <div class="flex flex-col motion-preset-slide-right-sm motion-delay-150">
            <span class="font-bold">tech stack</span>
            <span>i'm best at <span class="text-blue-400">c</span>, <span class="text-orange-300">python</span>, and <span class="text-yellow-300">javascript</span>/<span class="text-blue-300">typescript</span></span>
            <span>but i'm learning <span class="text-blue-300">go</span>, <span class="text-red-500">rust</span>, and <span class="text-purple-400">haskell</span>.</span>
          </div>
          
        </div>
        <div id="cube-container" class="motion-preset-fade-sm motion-delay-100 hidden sm:flex h-full relative col-span-2 w-full max-h-[300px] justify-center items-center aspect-square overflow-hidden"></div>
      </div>
      <div class="space-y-2 md:space-y-4 mt-2 md:mt-4 lg:px-2 text-base sm:text-lg">
        <!-- <div class="relative divider h-[2px] w-full bg-zinc-600 motion-preset-slide-right-sm motion-delay-150">
          <div class="absolute inset-0 bg-gradient-radial z-10"></div>
        </div> -->
        <!-- <div class="flex flex-col motion-preset-slide-right-sm motion-delay-200">
          <span class="font-bold">tech stack</span>
          <span>frontend: <span class="text-blue-300">react</span>, <span class="text-red-300">svelte</span>, <span class="text-red-400">astro</span>, <span class="text-yellow-300">vanilla js</span>, <span class="text-zinc-400">nextjs</span>, <span class="text-blue-400">c</span> in <span class="text-purple-500">wasm</span>, and <span class="text-blue-300">react native</span>.</span>
          <span>backend:  <span class="text-green-500">node</span>, <span class="text-blue-300">go</span>, and <span class="text-teal-300">flask</span>. </span></span>
          <span>platforms: <span class="text-zinc-400">vercel</span>, <span class="text-blue-300">digitalocean</span>, <span class="text-purple-300">heroku</span>, <span class="text-orange-200">aws</span> and <span class="text-blue-300">gcp</span>. </span>
          <span>databases: postgresql on <span class="text-green-400">supabase</span>, and nosql on <span class="text-green-500">mongodb</span> and <span class="text-yellow-400">firebase</span>.</span>
        </div> -->
        <div class="relative divider h-[2px] w-full bg-zinc-600 motion-preset-slide-right-sm motion-delay-100">
          <div class="absolute inset-0 bg-gradient-radial z-10"></div>
        </div>
        <div class="flex flex-col motion-preset-slide-right-sm motion-delay-150">
          <span class="font-bold">about this site</span>
          <span>this site is built with 
            <span class="text-red-400">astro</span>,
            <span class="text-blue-500">jquery</span>,
            <span class="text-blue-100">react</span>,
            <span class="text-blue-300">tailwind</span>, and a little
            <span class="text-yellow-300">threejs</span>.
          </span>
          <span>to see the previous version of this site, visit <a class="font-serif hover:underline" href="/old">/old</a>.</span>
          <a href="https://github.com/ronthekiehn/ronkiehn.dev" target="_blank" rel="noreferrer" class="w-fit hover:underline">or view the source code here</a>
        </div>
      </div>
    		

		</div>
    <div id="switcher" class="relative rounded-full h-[40px] max-w-xs mx-auto bg-zinc-600 flex justify-center items-center mt-8 mb-4 motion-preset-fade-lg motion-delay-[350ms]">
      <div class="absolute inset-0 bg-gradient-radial z-0 rounded-full"></div>
      <div class="relative m-[2px] bg-black w-full h-[36px] rounded-full z-10 flex justify-between items-center">
        <div id="slider" class="absolute bg-zinc-600 h-[36px] w-1/3 rounded-full transition-all duration-200 ease-in-out">
          <div class="absolute inset-0 bg-gradient-radial opacity-50 z-10 rounded-full"></div>
        </div>
        <button id="projects-btn" class="hover:underline relative h-full w-full px-3 text-white rounded-full transition-colors z-20">Projects</button>
        <button id="chatbot-btn" class="hover:underline relative h-full w-full px-2 text-white rounded-full transition-colors z-20">Chatbot</button>
        <button id="blog-btn" class="hover:underline relative h-full w-full px-3 text-white rounded-full transition-colors z-20">Blog</button>
      </div>
    </div>

    <div id="content-container" class="mt-8 mb-16">
      <div id="projects" class="flex flex-col gap-8 motion-preset-fade-lg motion-delay-[350ms]">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-4">
          {mainProjects.map(project => (
            <Project {...project} />
          ))}
        </div>
        <span class="font-bold text-zinc-300 text-sm mt-2 mx-auto">other projects</span>
        <div class="px-8 grid grid-cols-1 md:grid-cols-2 gap-4">
          {otherProjects.map(project => (
            <div class="flex flex-col justify-between">
            <SecondaryProject {...project} />
            {otherProjects.indexOf(project) < otherProjects.length - 2 && (
              <div class="mt-2 relative divider h-[1px] bg-zinc-600">
              <div class="absolute inset-0 bg-gradient-radial z-10"></div>
              </div>
            )}
          </div>
          ))}
        </div>
      </div>
      <div id="chatbot" class="relative mx-auto inset-0 bg-zinc-600 rounded-[12px] max-w-4xl h-[75vh] hidden motion-preset-fade-sm">
        <div class="absolute inset-0 bg-gradient-radial rounded-[12px] z-0"></div>
        <div class="relative m-[2px] top-[2px] bg-black rounded-[10.5px] z-10 h-[calc(75vh-4px)]">
          <ChatBot client:load />
        </div>
      </div>
      <div id="blog" class="h-screen hidden">
        <Blog />
      </div>
    </div>

</Layout>


<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-6LCTQSHDRD"></script>
<script is:inline>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-6LCTQSHDRD');
</script>

<script>
    import { initializeHover } from '../scripts/hover.js';
    initializeHover('.divider');
    initializeHover('#chatbot');
    initializeHover('#switcher');
    initializeHover('#slider');

   
    import $ from 'jquery';

    function switchTab(position: string, tabId: string) {
        $('#slider').css('left', position);
        $('#projects, #chatbot, #blog').addClass('hidden');
        $(tabId).removeClass('hidden');
      }

    function handleHash() {
        const hash = window.location.hash;
        if (hash === '#blog') {
            switchTab('66.66%', '#blog');
        } else if (hash === '#chatbot') {
            switchTab('33.33%', '#chatbot');
        } else {
            switchTab('0', '#projects');
        }
    }

    
    $(function() {
      $('#projects-btn').on('click', function() {
        switchTab('0', '#projects');
      });

      $('#chatbot-btn').on('click', function() {
        switchTab('33.33%', '#chatbot');
      });

      $('#blog-btn').on('click', function() {
        switchTab('66.66%', '#blog');
      });

      handleHash();
      $(window).on('hashchange', handleHash);
    });
    


     import * as THREE from 'three'
    const scene = new THREE.Scene();
    
    const container = $('#cube-container');
    const containerSize = Math.min(container.width(), 300);
    
    const camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);
    
    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(containerSize, containerSize);
    renderer.setAnimationLoop(animate);

    const ambient = new THREE.DirectionalLight(0xffffff, 0.1);
    ambient.position.set(10, 10, 10);
    scene.add(ambient);
    const ambient2 = new THREE.AmbientLight(0xffffff, 0.1);
    scene.add(ambient2);

    const light = new THREE.SpotLight(0xffffff, 30);
    light.position.set(0, 0, 15); 
    light.angle = Math.PI / 16;
    light.penumbra = 1;
    light.decay = 1;
    light.distance = 30; 
    
    const lightTarget = new THREE.Object3D();
    lightTarget.position.set(0, 0, 0); 
    scene.add(lightTarget);
    light.target = lightTarget;
    scene.add(light);


    $('#cube-container').append(renderer.domElement);
    renderer.setClearColor(0x171717);

    // Create cube with consistent size
    const baseSize = 3;
    const geometry = new THREE.BoxGeometry(baseSize, baseSize, baseSize);
    const material = new THREE.MeshStandardMaterial({ color: 0xdddddd });
    
    const cube = new THREE.Mesh(geometry, material);
    scene.add(cube);

    camera.position.z = 5;

    // Create a function for the mousemove handler so we can reattach it
    $(document).on("mousemove", (e: JQuery.MouseMoveEvent) => {
      if (cube) {
        const container = $('#cube-container');
        const rect = container[0].getBoundingClientRect();
        
        const centerX = rect.left + rect.width / 2;
        const centerY = rect.top + rect.height / 2;
        
        // Normalize mouse position to -1 to 1 range relative to container center
        const mousex = (e.clientX - centerX) / (rect.width * 2);
        const mousey = (e.clientY - centerY) / (rect.height * 2);
        
        // Calculate rotations
        const normalizedX = Math.min(Math.max(mousex, -1), 1);
        const normalizedY = Math.min(Math.max(mousey, -1), 1);
        
        const rotationY = -(Math.acos(normalizedX));
        const rotationX = Math.acos(normalizedY);
        
        cube.rotation.z = rotationX;
        cube.rotation.y = rotationY;

        // Update light position
        const vector = new THREE.Vector3(
          ((e.clientX - rect.left) / rect.width) * 2 - 1,
          -((e.clientY - rect.top) / rect.height) * 2 + 1,
          0.5
        );
        
        vector.unproject(camera);
        vector.sub(camera.position).normalize();
        
        const distance = -camera.position.z / vector.z;
        const targetPos = camera.position.clone().add(vector.multiplyScalar(distance));
        
        lightTarget.position.copy(targetPos);
        light.position.set(targetPos.x, targetPos.y, 15);
      }
    });

    // Update resize handler
    $(window).on('resize', () => {
        const container = $('#cube-container');
        const newSize = Math.min(container.width(), 300);
        
        renderer.setSize(newSize, newSize);
        camera.aspect = 1;
        camera.updateProjectionMatrix();
    });

    function animate() {
        renderer.render(scene, camera);
    }
  </script>

  <style>
    @media (min-width: 768px) {
      .typewriter {
    --motion-duration: 2000ms;
    animation: 
      typing var(--motion-duration) steps(17) forwards,
      cursor-blink 0.4s step-end infinite;
    white-space: nowrap;
    border-right: 2px solid;
    font-family: monospace;
    overflow: hidden;
    width: 17ch;
    border-right-color: transparent;
  }
    }

@keyframes typing {
  0%, 10% { 
    width: 0;
  }
  90%, 100% { 
    width: 17ch;
  }
}

@keyframes cursor-blink {
  0%, 100% { border-right-color: currentColor }
  50% { border-right-color: transparent }
}

.typewriter {
  animation-iteration-count: 1, 5;  /* Type once, blink 5 times */
}
  </style>